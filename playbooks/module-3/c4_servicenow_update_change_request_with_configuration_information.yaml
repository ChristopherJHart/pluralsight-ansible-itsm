---
- name: Remove OSPF network from Boston
  hosts: boston.chrisjhart.net
  gather_facts: false
  tasks:
    - name: Remove OSPF network from Boston
      cisco.ios.ios_config:
        lines: no network 192.168.4.0 0.0.0.255 area 0
        parents: router ospf 1
    - ansible.builtin.pause:
        prompt: "Press 'Enter' to continue with playbook"
- name: Create and schedule ServiceNow change request to implement OSPF changes
  hosts: localhost
  gather_facts: true
  tasks:
    - name: Create ServiceNow change request to implement OSPF changes
      servicenow.itsm.change_request:
        instance:
          host: "{{ servicenow_host }}"
          username: "{{ servicenow_username }}"
          password: "{{ servicenow_password }}"
        state: "new"
        type: "standard"
        requested_by: "ansible"
        short_description: >
          Activate OSPF on Boston's host-facing GigabitEthernet4 interface
        description: >
          To finish provisioning our new Boston branch office, we need to
          activate OSPF on the Boston router's host-facing GigabitEthernet4
          interface using Ansible.
        priority: "moderate"
        risk: "low"
        impact: "low"
        other:
          cmdb_ci: "f3b56a0807010110631efc289c1ed037"
      register: created_cr_results
    - name: Show playbook execution date
      ansible.builtin.debug:
        var: ansible_date_time.iso8601
    - name: Schedule ServiceNow change request to implement OSPF changes
      servicenow.itsm.change_request:
        instance:
          host: "{{ servicenow_host }}"
          username: "{{ servicenow_username }}"
          password: "{{ servicenow_password }}"
        number: "{{ created_cr_results.record.number }}"
        state: "scheduled"
        assignment_group: "Network"
        other:
          start_date: >-
            {{ ansible_date_time.iso8601
            | iso8601_to_servicenow_datetime_format }}
          end_date: >-
            {{ ansible_date_time.iso8601
            | modify_time(modifier='add', hours=1) }}
      register: created_cr_results
    - ansible.builtin.debug:
        msg: >-
          Created and scheduled {{ created_cr_results.record.number }} at
          {{ created_cr_results.record.opened_at }} to implement OSPF changes
          in Boston. Scheduled start date is
          {{ created_cr_results.record.start_date }} and scheduled end date is
          {{ created_cr_results.record.end_date }}.
- name: Fetch ServiceNow change requests created
  hosts: localhost
  gather_facts: true
  tasks:
    - name: Define threshold datetime for scheduled Change Request start date
      ansible.builtin.set_fact:
        change_request_start_date_threshold: >-
          {{ ansible_date_time.iso8601
          | modify_time(modifier='subtract', seconds=30) }}
    - name: >-
        Define playbook execution time, which should be before a scheduled
        Change Request's end date
      ansible.builtin.set_fact:
        playbook_execution_time: >-
          {{ ansible_date_time.iso8601
          | iso8601_to_servicenow_datetime_format }}
    - name: Show scheduled Change Request start date
      ansible.builtin.debug:
        var: change_request_start_date_threshold
    - name: >-
        Show playbook execution time, which should be before a scheduled Change
        Request's end date
      ansible.builtin.debug:
        var: playbook_execution_time
    - name: Fetch recent ServiceNow change requests
      servicenow.itsm.change_request_info:
        instance:
          host: "{{ servicenow_host }}"
          username: "{{ servicenow_username }}"
          password: "{{ servicenow_password }}"
        query:
          - state: "= scheduled"
            start_date: ">= {{ change_request_start_date_threshold }}"
            end_date: ">= {{ playbook_execution_time }}"
      register: cr_results
    - ansible.builtin.debug:
        msg: >-
          Found {{ cr_results.records | length }} Change Request(s) matching
          conditions
    - name: End playbook if no Change Requests exist
      ansible.builtin.meta: end_play
      when: cr_results.records | length == 0
    - name: Show data about scheduled Change Requests to be worked by Ansible
      ansible.builtin.debug:
        msg: >-
          Change Request {{ item.number }} opened at {{ item.opened_at }}
          with scheduled start date of {{ item.start_date }} and scheduled
          end date of {{ item.end_date }}
      with_items: "{{ cr_results.records }}"
      loop_control:
        label: "{{ item.number }}"
    - name: Assign Change Request to Ansible and update notes
      servicenow.itsm.change_request:
        instance:
          host: "{{ servicenow_host }}"
          username: "{{ servicenow_username }}"
          password: "{{ servicenow_password }}"
        number: "{{ cr_results.records[0].number }}"
        state: "implement"
        assignment_group: "Network"
        other:
          assigned_to: "ansible"
          work_notes: >-
            Implementing OSPF configuration change based on information in
            Change Request.
    - name: Show Change Request record details
      ansible.builtin.debug:
        var: cr_results.records[0]
    - ansible.builtin.pause:
        prompt: "Press 'Enter' to continue with playbook"
    - name: Fetch Configuration Item for IP Network
      servicenow.itsm.configuration_item_info:
        instance:
          host: "{{ servicenow_host }}"
          username: "{{ servicenow_username }}"
          password: "{{ servicenow_password }}"
        sys_class_name: "cmdb_ci_ip_network"
        sys_id: "{{ cr_results.records[0].cmdb_ci }}"
      register: ci_ip_network_results
    - ansible.builtin.debug:
        var: ci_ip_network_results
    - ansible.builtin.pause:
        prompt: "Press 'Enter' to continue with playbook"
    - ansible.builtin.set_fact:
        network_address: >-
          {{ ci_ip_network_results.records[0].subnet
          | ansible.netcommon.ipaddr('network') }}
        wildcard_mask: >-
          {{ ci_ip_network_results.records[0].subnet
          | ansible.netcommon.ipaddr('hostmask') }}
    - ansible.builtin.debug:
        var: network_address
    - ansible.builtin.debug:
        var: wildcard_mask
    - ansible.builtin.pause:
        prompt: "Press 'Enter' to continue with playbook"
    - name: Fetch Configuration item for Router
      servicenow.itsm.configuration_item_info:
        instance:
          host: "{{ servicenow_host }}"
          username: "{{ servicenow_username }}"
          password: "{{ servicenow_password }}"
        sys_class_name: "cmdb_ci_ip_router"
        sys_id: "{{ ci_ip_network_results.records[0].router }}"
      register: ci_router_results
    - ansible.builtin.debug:
        var: ci_router_results
    - ansible.builtin.pause:
        prompt: "Press 'Enter' to continue with playbook"
    - ansible.builtin.set_fact:
        router_to_configure: "{{ ci_router_results.records[0].ip_address }}"
    - ansible.builtin.debug:
        var: router_to_configure
    - ansible.builtin.pause:
        prompt: "Press 'Enter' to continue with playbook"
- name: Apply OSPF host-facing configuration to relevant router
  hosts: routers
  gather_facts: false
  tasks:
    - name: >-
        Validate OSPF network within Change Request does not already exist,
        then apply OSPF network configuration to
        {{ hostvars['localhost']['router_to_configure'] }}
      block:
        - name: >-
            Get Router LSAs from OSPF Link State Database from
            {{ hostvars['localhost']['router_to_configure'] }}
          cisco.ios.ios_command:
            commands: "show ip ospf database router"
          register: routing_output_before_configuration
        - name: >-
            LSA is not present prior to configuration. Configure OSPF network
            on {{ hostvars['localhost']['router_to_configure'] }} and validate
          block:
            - name: Configure OSPF network on device
              cisco.ios.ios_ospfv2:
                config:
                  processes:
                    - process_id: 1
                      network:
                        - address: >-
                            {{ hostvars['localhost']['network_address'] }}
                          wildcard_bits: >-
                            {{ hostvars['localhost']['wildcard_mask'] }}
                          area: "0"
                state: merged
            - name: >-
                Get Router LSAs from OSPF Link State Database from
                {{ hostvars['localhost']['router_to_configure'] }}
              cisco.ios.ios_command:
                commands: "show ip ospf database router"
              register: routing_output_after_configuration
            - name: >-
                Get current OSPF configuration from
                {{ hostvars['localhost']['router_to_configure'] }}
              cisco.ios.ios_command:
                commands: "show running-config | section router ospf"
              register: ospf_configuration_after_configuration
            - name: >-
                Update Change Request with information if change is successful
              servicenow.itsm.change_request:
                instance:
                  host: "{{ servicenow_host }}"
                  username: "{{ servicenow_username }}"
                  password: "{{ servicenow_password }}"
                number: >-
                  {{ hostvars['localhost']['created_cr_results']['record']
                  ['number'] }}
                state: "review"
                assignment_group: "Network"
                other:
                  work_notes: >-
                    Successfully configured OSPF network
                    {{ hostvars['localhost']['network_address'] }} on
                    {{ hostvars['localhost']['router_to_configure'] }}.
                    Relevant LSA is present in the OSPF Link State Database.


                    {{ routing_output_after_configuration.stdout[0] }}


                    Current OSPF configuration:


                    {{ ospf_configuration_after_configuration.stdout[0] }}
              when: >-
                hostvars['localhost']['network_address']
                in routing_output_after_configuration.stdout[0]
            - ansible.builtin.pause:
                prompt: "Press 'Enter' to continue with playbook"
            - name: >-
                Roll back changes and update Change Request with information if
                change is unsuccessful
              block:
                - name: Roll back OSPF configuration changes
                  cisco.ios.ios_ospfv2:
                    config:
                      processes:
                        - process_id: 1
                          network:
                            - address: >-
                                {{ hostvars['localhost']['network_address'] }}
                              wildcard_bits: >-
                                {{ hostvars['localhost']['wildcard_mask'] }}
                              area: "0"
                    state: deleted
                - name: Update Change Request with relevant information
                  servicenow.itsm.change_request:
                    instance:
                      host: "{{ servicenow_host }}"
                      username: "{{ servicenow_username }}"
                      password: "{{ servicenow_password }}"
                    number: >-
                      {{ hostvars['localhost']['created_cr_results']['record']
                      ['number'] }}
                    state: "review"
                    assignment_group: "Network"
                    other:
                    work_notes: >-
                        After configuring OSPF network
                        {{ hostvars['localhost']['network_address'] }} on
                        {{ hostvars['localhost']['router_to_configure'] }}, the
                        Router LSA for this network was not present in the OSPF
                        Link State Database.


                        {{ routing_output_after_configuration.stdout[0] }}


                        This may indicate an issue with the interface owning
                        this network. For example, the interface may be down.
                        Further investigation is needed to troubleshoot this
                        issue.

                        OSPF changes have been rolled back:


                        {{ ospf_configuration_after_configuration.stdout[0] }}
              when: >-
                hostvars['localhost']['network_address']
                not in routing_output_after_configuration.stdout[0]
          when: >-
            hostvars['localhost']['network_address']
            not in routing_output_before_configuration.stdout[0]
        - name: Update Change Request if change does not seem valid
          servicenow.itsm.change_request:
            instance:
              host: "{{ servicenow_host }}"
              username: "{{ servicenow_username }}"
              password: "{{ servicenow_password }}"
            number: >-
              {{ hostvars['localhost']['created_cr_results']['record']
              ['number'] }}
            state: "review"
            assignment_group: "Network"
            other:
              work_notes: >-
                We failed to validate this OSPF change. The Router LSA already
                exists for network
                {{ hostvars['localhost']['network_address'] }} that needs to be
                configured on
                {{ hostvars['localhost']['router_to_configure'] }}:


                {{ routing_output_before_configuration.stdout[0] }}


                This indicates that the network is already configured and being
                advertised elsewhere in the network. Further investigation is
                needed to validate where this LSA is being originated from.
          when: >-
            hostvars['localhost']['network_address']
            in routing_output_before_configuration.stdout[0]
      when: >-
        hostvars["localhost"]["router_to_configure"] is defined
        and hostvars["localhost"]["network_address"] is defined
        and hostvars["localhost"]["wildcard_mask"] is defined
        and hostvars["localhost"]["router_to_configure"] == inventory_hostname
