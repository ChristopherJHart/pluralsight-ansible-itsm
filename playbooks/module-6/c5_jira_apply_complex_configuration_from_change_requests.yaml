---
- name: "Remove OSPF network from Boston"
  hosts: boston.chrisjhart.net
  gather_facts: false
  tasks:
    - name: "Remove OSPF network from Boston"
      cisco.ios.ios_config:
        lines: no network 192.168.4.0 0.0.0.255 area 0
        parents: router ospf 1
- name: "Create and schedule Jira change request to implement OSPF changes"
  hosts: localhost
  gather_facts: true
  tasks:
    - name: "Create Jira change request to implement OSPF changes"
      community.general.jira:
        uri: "{{ jira_uri }}"
        username: "{{ jira_username }}"
        password: "{{ jira_password }}"
        project: "GLOB"
        operation: "create"
        summary: >-
          Activate OSPF on Boston's host-facing GigabitEthernet4 interface
        description: >
          To finish provisioning our new Boston branch office, we need to
          activate OSPF on the Boston router's host-facing GigabitEthernet4
          interface using Ansible.
        issuetype: "Arbitrary Network Configuration Change"
        fields:
          customfield_10041: >
            router ospf 1
              network 192.168.4.0 0.0.0.255 area 0
          customfield_10042: >
            router ospf 1
              no network 192.168.4.0 0.0.0.255 area 0
          customfield_10043: >
            show ip ospf database router | include 192.168.4.0
          customfield_10059: "boston.chrisjhart.net"
          labels:
            - ansible
      register: cr_results
    - name: "Modify change request status to Awaiting Implementation"
      community.general.jira:
        uri: "{{ jira_uri }}"
        username: "{{ jira_username }}"
        password: "{{ jira_password }}"
        issue: "{{ cr_results.meta.key }}"
        operation: "transition"
        status: "Standard change"
    - name: "Schedule change request"
      community.general.jira:
        uri: "{{ jira_uri }}"
        username: "{{ jira_username }}"
        password: "{{ jira_password }}"
        issue: "{{ cr_results.meta.key }}"
        operation: "edit"
        comment: "Scheduling change request."
        fields:
          customfield_10044: >-
            {{ ansible_date_time.iso8601 }}
          customfield_10045: >-
            {{ ansible_date_time.iso8601
            | modify_time_jira(modifier='add', hours=1) }}
    - name: "Fetch change request details"
      community.general.jira:
        uri: "{{ jira_uri }}"
        username: "{{ jira_username }}"
        password: "{{ jira_password }}"
        issue: "{{ cr_results.meta.key }}"
        operation: "fetch"
      register: final_cr_results
    - ansible.builtin.debug:
        msg: >-
          Created and scheduled {{ final_cr_results.meta.key }} at
          {{ final_cr_results.meta.fields.created }} to implement OSPF changes
          in Boston. Scheduled start date is
          {{ final_cr_results.meta.fields.customfield_10044 }} and scheduled
          end date is
          {{ final_cr_results.meta.fields.customfield_10045 }}.
    - ansible.builtin.pause:
        prompt: "Press 'Enter' to continue with playbook"
- name: "Fetch Jira change requests created"
  hosts: localhost
  gather_facts: true
  tasks:
    - name: >-
        Define playbook execution time, which should be before a scheduled
        Change Request's end date
      ansible.builtin.set_fact:
        playbook_execution_time: >-
          {{ ansible_date_time.iso8601
          | iso8601_to_jira_datetime_format(subtract_offset_hours=5) }}
    - ansible.builtin.debug:
        var: playbook_execution_time
    - name: "Fetch recent Jira change requests"
      community.general.jira:
        uri: "{{ jira_uri }}"
        username: "{{ jira_username }}"
        password: "{{ jira_password }}"
        project: "GLOB"
        operation: "search"
        jql: >-
          project=GLOB
          AND status="Awaiting Implementation"
          AND cf[10044]>=-1m
          AND cf[10045]>="{{ playbook_execution_time }}"
      register: cr_results
    - ansible.builtin.debug:
        msg: >-
          Found {{ cr_results.meta.issues | length }} Change Request(s)
          matching conditions
    - name: "End playbook if no Change Requests exist"
      ansible.builtin.meta: end_play
      when: cr_results.meta.issues | length == 0
    - name: "Show data about scheduled Change Requests to be worked by Ansible"
      ansible.builtin.debug:
        msg: >-
          Change Request {{ item.key }} opened at {{ item.fields.created }}
          with scheduled start date of {{ item.fields.customfield_10044 }} and
          scheduled end date of {{ item.fields.customfield_10045 }}
      with_items: "{{ cr_results.meta.issues }}"
      loop_control:
        label: "{{ item.key }}"
    - name: "Assign Change Request to Ansible"
      community.general.jira:
        uri: "{{ jira_uri }}"
        username: "{{ jira_username }}"
        password: "{{ jira_password }}"
        issue: "{{ cr_results.meta.issues[0].key }}"
        operation: "edit"
        account_id: "70121:2dbae1f5-6dca-4b0f-bc3d-353c20e542d2"
    - name: "Modify Change Request status to Implementing"
      community.general.jira:
        uri: "{{ jira_uri }}"
        username: "{{ jira_username }}"
        password: "{{ jira_password }}"
        issue: "{{ cr_results.meta.issues[0].key }}"
        operation: "transition"
        status: "Implement"
        comment: >-
          Implementing change request on router
          {{ cr_results.meta.issues[0].fields.customfield_10059 }}.
    - name: >-
        Define router to configure, Change Request key, and
        implementation/backout/test plans
      ansible.builtin.set_fact:
        router_to_configure: >-
          {{ cr_results.meta.issues[0].fields.customfield_10059 }}
        change_request_key: "{{ cr_results.meta.issues[0].key }}"
        implementation_plan: >-
          {{ cr_results.meta.issues[0].fields.customfield_10041 }}
        backout_plan: >-
          {{ cr_results.meta.issues[0].fields.customfield_10042 }}
        test_plan: >-
          {{ cr_results.meta.issues[0].fields.customfield_10043 }}
    - ansible.builtin.pause:
        prompt: "Press 'Enter' to continue with playbook"
- name: "Apply configuration to relevant router"
  hosts: routers
  gather_facts: false
  tasks:
    - name: >-
        Apply configuration and test plan to relevant router. Roll back if
        necessary
      block:
        - name: "Apply configuration to relevant router"
          cisco.ios.ios_config:
            lines: >-
              {{ hostvars['localhost']['implementation_plan'] }}
        - ansible.builtin.pause:
            prompt: "Press 'Enter' to continue with playbook"
        - name: "Invoke test plan on relevant router"
          cisco.ios.ios_command:
            commands: >-
              {{ hostvars['localhost']['test_plan'] }}
          register: test_output
        - ansible.builtin.pause:
            prompt: "Press 'Enter' to continue with playbook"
        - name: "Update Change Request with test plan results"
          community.general.jira:
            uri: "{{ jira_uri }}"
            username: "{{ jira_username }}"
            password: "{{ jira_password }}"
            issue: "{{ hostvars['localhost']['change_request_key'] }}"
            operation: "comment"
            comment: >-
              Test plan output from {{ inventory_hostname }}:


              {noformat}
              {{ test_output.stdout[0] }}
              {noformat}
        - name: "Move Change Request to Complete if test plan has output"
          community.general.jira:
            uri: "{{ jira_uri }}"
            username: "{{ jira_username }}"
            password: "{{ jira_password }}"
            issue: "{{ hostvars['localhost']['change_request_key'] }}"
            operation: "transition"
            status: "Complete"
          when: test_output.stdout[0]
        - ansible.builtin.pause:
            prompt: "Press 'Enter' to continue with playbook"
        - name: >-
            Roll back configuration changes and update Change Request if test
            plan does not have output
          block:
            - name: "Roll back configuration changes"
              cisco.ios.ios_config:
                lines: >-
                  {{ hostvars['localhost']['backout_plan'] }}
            - name: "Update Change Request accordingly"
              community.general.jira:
                uri: "{{ jira_uri }}"
                username: "{{ jira_username }}"
                password: "{{ jira_password }}"
                issue: "{{ hostvars['localhost']['change_request_key'] }}"
                operation: "transition"
                status: "Fail"
            - name: "Add comment to Change Request explaining failure"
              community.general.jira:
                uri: "{{ jira_uri }}"
                username: "{{ jira_username }}"
                password: "{{ jira_password }}"
                issue: "{{ hostvars['localhost']['change_request_key'] }}"
                operation: "comment"
                comment: >-
                  Test plan output was empty, which indicated that
                  configuration was not applied successfully. Configuration
                  changes on {{ inventory_hostname }} were rolled back
                  accordingly.
          when: not test_output.stdout[0]
      when: >-
        hostvars["localhost"]["router_to_configure"] == inventory_hostname
        and hostvars["localhost"]["change_request_key"] is defined
        and hostvars["localhost"]["implementation_plan"] is defined
        and hostvars["localhost"]["backout_plan"] is defined
        and hostvars["localhost"]["test_plan"] is defined
